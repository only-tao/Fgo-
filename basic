ui;
/* 主线程 */
log("当前线程为主线程:" + threads.currentThread());
var window=floaty.window(
    <vertical id="all" >
        <text>我是一行文本</text>
        {/* <horizonral> */}
        <button id="begin" w="auto" text="开始"/>
        <button id="end" text="结束"/>
        {/* </horizonral>    */}
        <button id="guan" text="关闭我" layout_gravity=""/>
    </vertical>
)
var width=device.width;//获取设备宽度
var height=device.height;//获取设备的高度
window.setPosition(1500,100);//(x,y),左上角的位置

window.all.click(()=>{
    window.setAdjustEnabled(!window.isAdjustEnabled());
});//点击悬浮窗可以移动
//begin and end!!!good job;
window.begin.click(()=>{
    log("你点击了开始");
    var thread1=threads.start(function(){
        //在新线程执行的代码
        //开始测试，在主进程里建立子线程，点击“结束”时终止程序
        while(1){
            click(1900,930);
            sleep(300);//可以使用sleep（）；

            click(1900,930);
            sleep(500);
         
            click(365,750);
            sleep(500);

            click(805,750);//一个瞬间只能点击一个点
            sleep(500);
          
            click(1165,750);
            sleep(500);
        }
            //↑点击三个指令卡
            // toastLog("我在子线程中执行");
    });
})
window.end.click(()=>{
    toastLog("已经结束-暂停");
    // window.close();
    threads.shutDownAll();
})
window.guan.click(()=>{
    toastLog("我已经被关闭");
    window.close();
})

window.exitOnClose();
setInterval(()=>{}, 1000);

// setInterval,每隔一段时间执行一次
// setTimeout(callback, delay[, ...args])
// callback {Function} 当定时器到点时要调用的函数。
// delay {number} 调用 callback 之前要等待的毫秒数。
// ...args {any} 当调用 callback 时要传入的可选参数。




